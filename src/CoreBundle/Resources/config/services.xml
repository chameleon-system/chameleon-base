<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="vendor_dir">%kernel.root_dir%/../vendors</parameter>
        <parameter key="chameleon_system_core.pdo.mysql_attr_init_command" type="constant">\PDO::MYSQL_ATTR_INIT_COMMAND</parameter> <!-- deprecated since 6.3.0 - no longer used -->
        <parameter key="chameleon_system_core.pdo.mysql_attr_compression_name" type="constant">\PDO::MYSQL_ATTR_COMPRESS</parameter> <!-- deprecated since 6.3.0 - see below -->
        <parameter key="chameleon_system_core.pdo.enable_mysql_compression">false</parameter> <!-- deprecated since 6.3.0 - use the configuration key "doctrine: dbal: options: 1006: 1" instead -->
        <parameter key="chameleon_system_core.database.estimation_lower_limit">0</parameter>
        <parameter key="chameleon_system_core.controller_invoke_listener.class">ChameleonSystem\CoreBundle\Controller\ChameleonControllerInvokeListener</parameter>
        <parameter key="chameleon_system_core.tpl_page_controller.class">TPkgCmsRouteControllerCmsTplPage</parameter>
        <parameter key="chameleon_system_core.render_media_properties_field">true</parameter>
    </parameters>

    <services>
        <service id="chameleon_system_core.pdo" class="PDO" public="false">
            <factory service="database_connection" method="getWrappedConnection" />
            <deprecated>The %service_id% service is deprecated since Chameleon 6.3.0. Use database_connection::getWrappedConnection() instead instead.</deprecated>
        </service>

        <service id="chameleon_system_core.sessionPdo" class="PDO">
            <factory service="database_connection" method="getWrappedConnection" />
        </service>

        <service id="chameleon_system_core.global" class="TGlobal" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.util.input_filter" />
            <argument type="service" id="kernel"/>
        </service>

        <service id="chameleon_system_core.tools" class="TTools" public="true"/>

        <service id="chameleon_system_core.password" class="TPkgCmsSecurity_Password">
            <argument type="service" id="chameleon_system_core.security.password.password_hash_generator"/>
            <deprecated>The %service_id% service is deprecated since Chameleon 6.2.0. Use chameleon_system_core.security.password.password_hash_generator instead.</deprecated>
        </service>

        <service id="chameleon_system_core.filemanager" class="TPkgCmsFileManager_FileSystem" public="true"/>

        <service id="chameleon_system_core.redirectstrategy.registershutdown" class="ChameleonRedirectStrategyRegisterShutdown" public="false">
            <argument type="service" id="request_stack" />
        </service>

        <service id="chameleon_system_core.redirectstrategy.throwexception" class="ChameleonRedirectStrategyThrowException" public="false">
        </service>


        <service id="chameleon_system_core.redirect" class="cmsCoreRedirect" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.redirectstrategy.registershutdown" />
            <argument type="service" id="chameleon_system_core.util.url" />
            <argument type="service" id="service_container" />
            <argument type="service" id="chameleon_system_core.response.response_variable_replacer"/>
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
        </service>

        <service id="chameleon_system_core.cache" alias="chameleon_system_cms_cache.cache" public="true"/>

        <service id="chameleon_system_core.viewPathManager" class="TViewPathManager" public="true">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_view_renderer.snippet_directory" />
        </service>

        <service id="chameleon_system_core.http_kernel" class="ChameleonSystem\CoreBundle\ChameleonHttpKernel">
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="controller_resolver" />
            <argument type="service" id="request_stack" />
            <call method="setTrustedProxies">
                <argument>%chameleon_system_core.request.trusted_proxies%</argument>
            </call>
            <call method="setTrustedHeaderClientIp">
                <argument>%chameleon_system_core.request.trusted_header_client_ip%</argument>
            </call>
            <call method="setTrustedHeaderClientHost">
                <argument>%chameleon_system_core.request.trusted_header_client_host%</argument>
            </call>
            <call method="setTrustedHeaderClientPort">
                <argument>%chameleon_system_core.request.trusted_header_client_port%</argument>
            </call>
            <call method="setTrustedHeaderClientProtocol">
                <argument>%chameleon_system_core.request.trusted_header_client_protocol%</argument>
            </call>
        </service>

        <service id="chameleon_system_core.controller_resolver" class="ChameleonSystem\CoreBundle\Controller\ChameleonControllerResolver">
            <argument type="service" id="service_container" />
            <argument type="service" id="default.controller_resolver" />
            <argument type="collection">
                <argument>chameleon_system_core.frontend_controller</argument>
                <argument>chameleon_system_core.backend_controller</argument>
            </argument>
            <argument type="service" id="chameleon_system_core.frontend_controller" />
        </service>

        <service id="chameleon_system_core.service_initializer.request" class="ChameleonSystem\CoreBundle\Service\Initializer\RequestInitializer">
            <argument type="service" id="chameleon_system_core.response.response_variable_replacer" />
            <call method="setSessionManager">
                <argument type="service" id="chameleon_system_core.session.chameleon_session_manager" />
            </call>
        </service>

        <service id="chameleon_system_core.InitializeRequestListener" class="ChameleonSystem\CoreBundle\EventListener\InitializeRequestListener" public="true">
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="252" />
            <argument type="service" id="chameleon_system_core.service_initializer.request" />
            <argument type="service" id="chameleon_system_core.maintenance_mode_service"/>
            <argument type="service" id="chameleon_system_core.request_info_service"/>
        </service>

        <service id="chameleon_system_core.session.chameleon_session_manager" class="ChameleonSystem\CoreBundle\Session\ChameleonSessionManager" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="database_connection" />
            <argument type="service" id="chameleon_system_core.sessionPdo" />
            <argument type="service" id="service_container" />
            <argument>%session.metadata.update_threshold%</argument>
            <argument>%session.storage.options%</argument>
            <argument type="service" id="chameleon_system_core.util.input_filter" />
        </service>

        <service id="chameleon_system_core.ChameleonSessionManager" alias="chameleon_system_core.session.chameleon_session_manager" public="true">
            <deprecated>The "%service_id%" service is deprecated since Chameleon 6.2.0 - use chameleon_system_core.session.chameleon_session_manager instead.</deprecated>
        </service>

        <service id="session" synthetic="true" public="true"/>

        <service id="chameleon_system_core.chameleon_controller" synthetic="true" public="true"/>

        <service id="chameleon_system_core.module_resolver" class="ChameleonSystem\CoreBundle\ModuleService\ModuleResolver" public="true">
            <argument /> <!-- Service locator will be set by ChameleonModulePass -->
        </service>

        <service id="chameleon_system_core.module_execution_strategy.subrequest" class="ChameleonSystem\CoreBundle\ModuleService\ModuleExecutionStrategySubRequest" public="false">
            <argument type="service" id="chameleon_system_cms_cache.cache"/>
            <argument type="service" id="kernel"/>
        </service>

        <service id="chameleon_system_core.module_execution_strategy.inline" class="ChameleonSystem\CoreBundle\ModuleService\ModuleExecutionStrategyInline" public="false">
        </service>

        <service id="chameleon_system_core.moduleloader" class="TModuleLoader" public="false">
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.module_resolver" />
            <argument type="service" id="chameleon_system_core.viewPathManager" />
            <argument type="service" id="chameleon_system_cms_cache.cache" />
            <argument type="service" id="chameleon_system_core.global" />
            <argument /> <!-- Module execution strategy will be set by ChameleonSystemCoreExtension -->
        </service>
        <service id="chameleon_system_core.usermoduleloader" class="TUserModuleLoader" parent="chameleon_system_core.moduleloader" public="true" />

        <service id="chameleon_system_core.subusermoduleloader" parent="chameleon_system_core.usermoduleloader" shared="false" public="true" />

        <service id="chameleon_system_core.base_controller" abstract="true">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <call method="setCache">
                <argument type="service" id="chameleon_system_cms_cache.cache" />
            </call>
            <call method="setGlobal">
                <argument type="service" id="chameleon_system_core.global" />
            </call>
            <call method="setActivePageService">
                <argument type="service" id="chameleon_system_core.active_page_service" />
            </call>
            <call method="setRequestInfoService">
                <argument type="service" id="chameleon_system_core.request_info_service" />
            </call>
            <call method="setRedirect">
                <argument type="service" id="chameleon_system_core.redirect" />
            </call>
            <call method="setInputFilterUtil">
                <argument type="service" id="chameleon_system_core.util.input_filter" />
            </call>
            <call method="setAuthenticityTokenManager">
                <argument type="service" id="chameleon_system_core.security.authenticity_token.authenticity_token_manager" />
            </call>
            <call method="setResourceCollector">
                <argument type="service" id="chameleon_system_core.resource_collector" />
            </call>
            <call method="setResponseVariableReplacer">
                <argument type="service" id="chameleon_system_core.response.response_variable_replacer" />
            </call>
        </service>

        <service id="chameleon_system_core.frontend_controller" class="ChameleonSystem\CoreBundle\Controller\ChameleonFrontendController" parent="chameleon_system_core.base_controller" public="true">
            <argument type="service" id="chameleon_system_core.usermoduleloader" />
            <argument type="service" id="chameleon_system_core.viewPathManager" />
            <argument type="service" id="service_container" />
            <argument type="service" id="chameleon_system_view_renderer.mapper.config_to_less" />
        </service>

        <service id="chameleon_system_core.backend_controller" class="ChameleonSystem\CoreBundle\Controller\ChameleonBackendController" parent="chameleon_system_core.base_controller" public="true">
            <argument type="service" id="chameleon_system_core.moduleloader" />
            <call method="setBackendAccessCheck">
                <argument type="service" id="chameleon_system_core.security.backend_access_check" />
            </call>
        </service>

        <service id="chameleon_system_core.image_not_found_controller" class="ChameleonSystem\CoreBundle\Controller\ImageNotFoundController">
        </service>

        <service id="chameleon_system_core.controller_invoke_listener" class="%chameleon_system_core.controller_invoke_listener.class%">
            <argument type="service" id="service_container" />
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="chameleon_system_core.symfony_streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="chameleon_system_core.router.chameleon_base" class="ChameleonSystem\CoreBundle\Routing\ChameleonBaseRouter" parent="router.default" abstract="true">
            <call method="setRedirect">
                <argument type="service" id="chameleon_system_core.redirect" />
            </call>
            <call method="setUrlUtil">
                <argument type="service" id="chameleon_system_core.util.url" />
            </call>
        </service>

        <service id="chameleon_system_core.router.chameleon_frontend" class="ChameleonSystem\CoreBundle\Routing\ChameleonFrontendRouter" parent="chameleon_system_core.router.chameleon_base" public="true">
            <call method="setLanguageService">
                <argument type="service" id="chameleon_system_core.language_service" />
            </call>
            <call method="setPortalDomainService">
                <argument type="service" id="chameleon_system_core.portal_domain_service" />
            </call>
            <call method="setRequestStack">
                <argument type="service" id="request_stack" />
            </call>
            <call method="setRoutingUtil">
                <argument type="service" id="chameleon_system_core.util.routing" />
            </call>
            <call method="setControllerId">
                <argument>chameleon_system_core.frontend_controller</argument>
            </call>
            <call method="setRequestInfoService">
                <argument type="service" id="chameleon_system_core.request_info_service" />
            </call>
            <call method="setDomainValidator">
                <argument type="service" id="chameleon_system_core.routing.domain_validator" />
            </call>
        </service>

        <service id="chameleon_system_core.router.chameleon_backend" class="ChameleonSystem\CoreBundle\Routing\ChameleonBackendRouter" parent="chameleon_system_core.router.chameleon_base" public="true">
        </service>

        <service id="chameleon_system_core.routing.loader.chameleon" class="esono\pkgCmsRouting\CmsRouteLoader">
            <argument type="service" id="service_container" />
            <argument type="service" id="chameleon_system_core.util.url_prefix_generator" />
            <argument type="service" id="chameleon_system_core.util.routing" />
            <argument type="service" id="chameleon_system_core.util.url" />
            <tag name="routing.loader" />
        </service>

        <service id="chameleon_system_core.routing.domain_validator" class="ChameleonSystem\CoreBundle\Routing\DomainValidator">
            <argument type="service" id="chameleon_system_core.portal_domain_service"/>
            <argument type="service" id="chameleon_system_core.request_info_service"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.language_service"/>
        </service>

        <service id="chameleon_system_core.routing.domain_validator_request_level_cache_decorator"
                 class="ChameleonSystem\CoreBundle\Routing\DomainValidatorRequestLevelCacheDecorator"
                 decorates="chameleon_system_core.routing.domain_validator"
        >
            <argument type="service" id="chameleon_system_core.routing.domain_validator_request_level_cache_decorator.inner" />
        </service>

        <service id="chameleon_system_core.listener.backend_breadcrumb" class="ChameleonSystem\CoreBundle\EventListener\BackendBreadcrumbListener">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.request_info_service"/>
            <argument type="service" id="chameleon_system_core.util.input_filter" />
            <argument type="service" id="chameleon_system_core.service.backend_breadcrumb" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>

        <service id="chameleon_system_core.listener.request_type" class="ChameleonSystem\CoreBundle\EventListener\RequestTypeListener">
            <argument type="service" id="service_container" />
            <argument type="service" id="chameleon_system_core.request_type_backend" />
            <argument type="service" id="chameleon_system_core.request_type_frontend" />
            <argument type="service" id="chameleon_system_core.request_type_asset" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="254" />
        </service>

        <service id="chameleon_system_core.request_type_frontend" class="ChameleonSystem\CoreBundle\RequestType\FrontendRequestType" />

        <service id="chameleon_system_core.request_type_backend" class="ChameleonSystem\CoreBundle\RequestType\BackendRequestType" />

        <service id="chameleon_system_core.request_type_asset" class="ChameleonSystem\CoreBundle\RequestType\AssetRequestType" />

        <service id="chameleon_system_core.listener.template_engine_access" class="ChameleonSystem\CoreBundle\EventListener\TemplateEngineAccessListener">
            <argument type="service" id="chameleon_system_core.request_info_service" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250" />
        </service>

        <service id="chameleon_system_core.listener.redirect_to_primary_domain" class="ChameleonSystem\CoreBundle\EventListener\CheckPortalDomainListener">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.request_info_service" />

            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="252" />
        </service>

        <service id="chameleon_system_core.request_type" synthetic="true" />

        <service id="chameleon_system_core.security.backend_access_check" class="ChameleonSystem\CoreBundle\Security\BackendAccessCheck">
            <argument type="service" id="chameleon_system_core.global" />
            <argument type="service" id="chameleon_system_core.redirect" />
            <argument type="service" id="request_stack" />
            <call method="unrestrictPagedef">
                <argument>login</argument>
                <argument type="collection"></argument>
            </call>

        </service>

        <service id="chameleon_system_core.request_info_service" class="ChameleonSystem\CoreBundle\Service\RequestInfoService" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.portal_domain_service"/>
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.util.url_prefix_generator" />
        </service>

        <service id="chameleon_system_core.active_page_service" class="ChameleonSystem\CoreBundle\Service\ActivePageService" public="true">
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.service_initializer.active_page_service" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="router" />
            <argument type="service" id="chameleon_system_core.util.url" />
            <argument type="service" id="chameleon_system_core.request_info_service" />
            <argument type="service" id="chameleon_system_core.util.routing"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="chameleon_system_core.service_initializer.active_page_service" class="ChameleonSystem\CoreBundle\Service\Initializer\ActivePageServiceInitializer" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="chameleon_system_core.util.input_filter" />
        </service>

        <service id="chameleon_system_core.portal_domain_service" class="ChameleonSystem\CoreBundle\Service\PortalDomainService" public="true">
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="chameleon_system_core.service_initializer.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.data_access_cms_portal_domains"/>
            <argument type="service" id="chameleon_system_core.language_service"/>
        </service>

        <service id="chameleon_system_core.service_initializer.portal_domain_service" class="ChameleonSystem\CoreBundle\Service\Initializer\PortalDomainServiceInitializer" public="false">
            <argument type="service" id="chameleon_system_core.util.input_filter" />
            <argument type="service" id="service_container" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.data_access_cms_portal_domains"/>
        </service>

        <service id="chameleon_system_core.language_service" class="ChameleonSystem\CoreBundle\Service\LanguageService" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="chameleon_system_core.service_initializer.language_service" />
            <argument type="service" id="chameleon_system_core.data_access_cms_language" />
        </service>

        <service id="chameleon_system_core.service_initializer.language_service" class="ChameleonSystem\CoreBundle\Service\Initializer\LanguageServiceInitializer" public="false">
            <argument type="service" id="chameleon_system_core.util.input_filter" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="service_container" />
            <argument type="service" id="database_connection" />
        </service>

        <service id="chameleon_system_core.supported_languages_service" class="ChameleonSystem\CoreBundle\Service\SupportedLanguagesService">
            <argument type="service" id="database_connection" />
        </service>

        <service id="chameleon_system_core.system_page_service" class="ChameleonSystem\CoreBundle\Service\SystemPageService" public="true">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.util.url" />
            <argument type="service" id="chameleon_system_core.util.routing" />
            <argument type="service" id="chameleon_system_core.tree_service" />
            <argument type="service" id="chameleon_system_core.data_access_cms_portal_system_page" />
        </service>

        <service id="chameleon_system_core.page_service" class="ChameleonSystem\CoreBundle\Service\PageService" public="true">
            <argument type="service" id="chameleon_system_core.router.chameleon_frontend" />
            <argument type="service" id="chameleon_system_core.data_access_cms_tpl_page" />
            <argument type="service" id="chameleon_system_core.tree_node_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.portal_domain_service"/>
            <argument type="service" id="chameleon_system_core.util.page_service_util"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.util.url"/>
        </service>

        <service id="chameleon_system_core.tree_service" class="ChameleonSystem\CoreBundle\Service\TreeService" public="true">
            <argument type="service" id="chameleon_system_core.page_service" />
            <argument type="service" id="chameleon_system_core.data_access_cms_tree" />
            <argument type="service" id="chameleon_system_core.util.url" />
        </service>

        <service id="chameleon_system_core.tree_node_service" class="ChameleonSystem\CoreBundle\Service\TreeNodeService" public="true">
            <argument type="service" id="chameleon_system_core.data_access_cms_tree_node" />
        </service>

        <service id="chameleon_system_core.query_modifier.order_by" class="ChameleonSystem\core\DatabaseAccessLayer\QueryModifierOrderBy" public="true">
        </service>

        <service id="chameleon_system_core.update_manager_virtual_fields" class="ChameleonSystem\CoreBundle\UpdateManager\VirtualFieldManager" public="false">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.update_manager_strip_virtual_fields_from_query" class="ChameleonSystem\CoreBundle\UpdateManager\StripVirtualFieldsFromQuery" public="true">
            <argument type="service" id="chameleon_system_core.update_manager_virtual_fields" />
        </service>

        <service id="chameleon_system_core.flash_messages" class="ChameleonSystem\CoreBundle\Service\FlashMessageService" public="true">
            <argument type="service" id="request_stack" />
        </service>

        <service id="chameleon_system_core.command.update.run" class="ChameleonSystem\CoreBundle\Command\RunUpdateCommand">
            <argument type="service" id="chameleon_system_cms_cache.cache" />
            <argument type="service" id="chameleon_system_autoclasses.cache_warmer" />
            <tag name="console.command" />
        </service>

        <service id="chameleon_system_core.command.update.list" class="ChameleonSystem\CoreBundle\Command\ListUpdateCommand">
            <tag name="console.command" />
        </service>

        <service id="chameleon_system_core.tpl_page_controller" class="%chameleon_system_core.tpl_page_controller.class%">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.util.url_prefix_generator" />
            <argument type="service" id="chameleon_system_core.util.url" />
            <argument type="service" id="chameleon_system_core.util.routing" />
            <call method="setMainController">
                <argument type="service" id="chameleon_system_core.frontend_controller" />
            </call>
            <call method="setTreeNodeService">
                <argument type="service" id="chameleon_system_core.tree_node_service" />
            </call>
            <call method="setTreeService">
                <argument type="service" id="chameleon_system_core.tree_service" />
            </call>
            <call method="setRedirect">
                <argument type="service" id="chameleon_system_core.redirect" />
            </call>
            <call method="setRequestStack">
                <argument type="service" id="request_stack" />
            </call>
            <call method="setPageService">
                <argument type="service" id="chameleon_system_core.page_service" />
            </call>
        </service>

        <service id="chameleon_system_core.table_editor_nested_set_helper_node_factory" class="ChameleonSystem\CoreBundle\TableEditor\NestedSet\NodeFactory" public="false" />
        <service id="chameleon_system_core.table_editor_nested_set_helper_factory" class="ChameleonSystem\CoreBundle\TableEditor\NestedSet\NestedSetHelperFactory" public="true">
            <argument type="service" id="chameleon_system_core.table_editor_nested_set_helper_node_factory" />
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.database_access_layer_file_types" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerFileTypes" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.database_access_layer_cms_tpl_page" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsTplPage" public="true">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.database_access_layer_cms_tpl_module" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsTPlModule" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.database_access_layer_cms_tree" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsTree">
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>

        <service id="chameleon_system_core.database_access_layer_cms_master_pagedef_spot_parameter" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsMasterPagedefSpotParameter" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>
        <service id="chameleon_system_core.database_access_layer_media" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsMedia" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>
        <service id="chameleon_system_core.database_access_layer_cms_field_type" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerFieldTypes" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>
        <service id="chameleon_system_core.database_access_layer_field_config" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerFieldConfig" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>
        <service id="chameleon_system_core.database_access_layer_cms_master_pagedef_spot_access" class="ChameleonSystem\CoreBundle\DatabaseAccessLayer\DatabaseAccessLayerCmsMasterPagedefSpotAccess" public="true">
            <call method="setDatabaseConnection">
                <argument type="service" id="database_connection" />
            </call>
        </service>
        <service id="chameleon_system_core.updatemanager.update_filter_service" class="ChameleonSystem\CoreBundle\UpdateManager\UpdateFilterService" public="true">
        </service>

        <service id="chameleon_system_core.controller_proxy_disabled_autoflushing" class="ChameleonSystem\CoreBundle\Controller\ChameleonNoAutoFlushController">
            <argument type="service" id="chameleon_system_core.frontend_controller" />
        </service>

        <service id="chameleon_system_core.controller.exception" class="ChameleonSystem\CoreBundle\Controller\ExceptionController" public="true">
            <argument type="service" id="twig" />
            <argument>%kernel.debug%</argument>
            <call method="setMainController">
                <argument type="service" id="chameleon_system_core.controller_proxy_disabled_autoflushing" />
            </call>
            <call method="setPortalDomainService">
                <argument type="service" id="chameleon_system_core.portal_domain_service" />
            </call>
            <call method="setRequestInfoService">
                <argument type="service" id="chameleon_system_core.request_info_service" />
            </call>
            <call method="setPageService">
                <argument type="service" id="chameleon_system_core.page_service" />
            </call>
            <call method="setExtranetConfiguration">
                <argument type="service" id="chameleon_system_extranet.extranet_config" />
            </call>
            <call method="setExtranetUserProvider">
                <argument type="service" id="chameleon_system_extranet.extranet_user_provider" />
            </call>
        </service>

        <service id="chameleon_system_core.util.url" class="ChameleonSystem\CoreBundle\Util\UrlUtil" public="true">
            <argument type="service" id="chameleon_system_core.util.url_prefix_generator" />
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
            <argument type="service" id="chameleon_system_core.routing.domain_validator" />
            <argument type="service" id="chameleon_system_core.security.authenticity_token.authenticity_token_manager"/>
        </service>

        <service id="chameleon_system_core.util.mlt_field" class="ChameleonSystem\CoreBundle\Util\MltFieldUtil" public="true">
            <argument type="service" id="request_stack" />
        </service>

        <service id="chameleon_system_core.view_port_manager" class="TCMSViewPortManager" public="true">
            <argument type="service" id="request_stack" />
            <argument type="service" id="chameleon_system_core.util.input_filter" />
        </service>

        <service id="chameleon_system_core.util.snippet_chain" class="ChameleonSystem\CoreBundle\Util\SnippetChainUtil">
            <argument type="service" id="database_connection"/>
            <deprecated>The %service_id% service is deprecated since Chameleon 6.2.0. Use chameleon_system_view_renderer.snippet_chain.snippet_chain_modifier instead.</deprecated>
        </service>

        <service id="chameleon_system_core.util.input_filter" class="ChameleonSystem\CoreBundle\Util\InputFilterUtil" public="true">
            <argument type="service" id="request_stack" />
        </service>

        <service id="chameleon_system_core.util.media_path_generator" class="ChameleonSystem\CoreBundle\Util\MediaPathGenerator" public="true">
            <argument type="service" id="chameleon_system_core.util.url_normalization"/>
        </service>

        <service id="chameleon_system_core.util.field_translation" class="ChameleonSystem\CoreBundle\Util\FieldTranslationUtil" public="true">
            <argument type="service" id="chameleon_system_core.request_info_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
        </service>

        <service id="chameleon_system_core.util.page_service_util" class="ChameleonSystem\CoreBundle\Util\PageServiceUtil">
            <argument type="service" id="chameleon_system_core.util.url"/>
            <argument type="service" id="service_container"/>
            <argument type="constant">CHAMELEON_SEO_URL_REMOVE_TRAILING_SLASH</argument>
        </service>

        <service id="chameleon_system_core.change_active_page_listener" class="ChameleonSystem\CoreBundle\EventListener\RedirectToSecurePageListener">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.util.url"/>
            <argument type="service" id="chameleon_system_core.redirect"/>
            <argument type="service" id="chameleon_system_core.request_info_service"/>
            <tag name="kernel.event_listener" event="chameleon_system_core.change_active_page" method="onChangeActivePage" priority="390"/>
        </service>

        <service id="chameleon_system_core.secure_page_header_listener" class="ChameleonSystem\CoreBundle\EventListener\NoCacheForSecurePageListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.change_active_page" method="onChangeActivePage" priority="270"/>
        </service>

        <service id="chameleon_system_core.change_translation_locale_listener" class="ChameleonSystem\CoreBundle\EventListener\ChangeTranslationLocaleListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.locale_changed" method="onLocaleChangedEvent" />
            <argument type="service" id="translator" />
        </service>

        <service id="chameleon_system_core.change_chameleon_objects_locale_listener" class="ChameleonSystem\CoreBundle\EventListener\ChangeChameleonObjectsLocaleListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.locale_changed" method="onLocaleChangedEvent" />
            <argument type="service" id="chameleon_system_core.portal_domain_service" />
            <argument type="service" id="chameleon_system_core.language_service" />
        </service>

        <service id="chameleon_system_core.i18n.export_service" class="ChameleonSystem\CoreBundle\i18n\TranslationExporterJSON">
            <argument type="service" id="translator" />
        </service>
        <service id="chameleon_system_core.i18n.active_user_permission" class="ChameleonSystem\CoreBundle\i18n\ActiveCmsUserPermission">

        </service>
        <service id="chameleon_system_core.i18n.export_translation_db_controller" class="ChameleonSystem\CoreBundle\i18n\Controller\JsTranslationController">
            <argument type="service" id="chameleon_system_core.i18n.export_service" />
            <argument type="service" id="chameleon_system_core.i18n.active_user_permission" />
        </service>

        <service id="chameleon_system_core.event_listener.add_jquery_include" class="ChameleonSystem\CoreBundle\EventListener\AddJqueryIncludeListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.header" method="onGlobalHtmlHeaderInclude" priority="250" />
        </service>

        <service id="chameleon_system_core.event_listener.add_global_head_includes" class="ChameleonSystem\CoreBundle\EventListener\AddGlobalHeadIncludesListener">
            <argument type="service" id="chameleon_system_view_renderer.snippet_directory" />
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.header" method="onGlobalHtmlHeaderInclude" priority="240" />
        </service>

        <service id="chameleon_system_core.event_listener.add_module_includes" class="ChameleonSystem\CoreBundle\EventListener\AddModuleIncludesListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.header" method="onGlobalHtmlHeaderInclude" priority="230" />
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.footer" method="onGlobalHtmlFooterInclude" priority="230" />
            <argument type="service" id="chameleon_system_core.request_info_service" />
            <argument type="service" id="chameleon_system_core.moduleloader" />
            <argument type="service" id="chameleon_system_core.usermoduleloader" />
        </service>

        <service id="chameleon_system_core.event_listener.add_controller_head_includes" class="ChameleonSystem\CoreBundle\EventListener\AddControllerIncludesListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.header" method="onGlobalHtmlHeaderInclude" priority="220" />
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.footer" method="onGlobalHtmlFooterInclude" priority="220" />
            <argument type="service" id="chameleon_system_core.request_info_service" />
            <argument type="service" id="chameleon_system_core.backend_controller" />
            <argument type="service" id="chameleon_system_core.frontend_controller" />
        </service>

        <service id="chameleon_system_core.event_listener.add_antispam_includes" class="ChameleonSystem\CoreBundle\EventListener\AddAntispamIncludesListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.html_includes.footer" method="onGlobalHtmlFooterInclude" />
            <argument type="service" id="chameleon_system_core.request_info_service" />
        </service>

        <service id="chameleon_system_core.event_listener.case_insensitive_portal_exception_listener" class="ChameleonSystem\CoreBundle\EventListener\CaseInsensitivePortalExceptionListener">
            <argument type="service" id="chameleon_system_core.data_access_cms_portal_domains"/>
            <tag name="kernel.event_listener" event="kernel.exception" />
        </service>

        <service id="chameleon_system_core.util.routing" class="ChameleonSystem\CoreBundle\Util\RoutingUtil" public="true">
            <argument type="service" id="chameleon_system_core.util.routing_data_access" />
            <argument type="service" id="chameleon_system_core.tree_service" />
            <argument type="service" id="chameleon_system_core.util.url_prefix_generator"/>
        </service>


        <service id="chameleon_system_core.util.routing_util_cache_decorator" class="ChameleonSystem\CoreBundle\Util\RoutingUtilCacheDecorator" public="false">
            <!-- service becomes a decorator for chameleon_system_core.util.routing_data_access if caching is enabled  -->
            <argument type="service" id="chameleon_system_core.util.routing_util_cache_decorator.inner" />
            <argument type="service" id="chameleon_system_cms_cache.cache" />
        </service>

        <service id="chameleon_system_core.util.request_cache_routing" class="ChameleonSystem\CoreBundle\Util\RequestCacheRoutingUtil">
            <argument type="service" id="chameleon_system_core.util.request_cache_routing.inner" />
        </service>

        <service id="chameleon_system_core.util.routing_data_access" class="ChameleonSystem\CoreBundle\Util\RoutingUtilDataAccess" public="false">
            <argument type="service" id="chameleon_system_core.util.url" />
            <argument type="service" id="database_connection" />
            <argument type="service" id="chameleon_system_core.util.field_translation" />
        </service>

        <service id="chameleon_system_core.util.url_prefix_generator" class="ChameleonSystem\CoreBundle\Util\UrlPrefixGenerator" public="true">
            <argument type="service" id="chameleon_system_core.portal_domain_service"/>
        </service>

        <service id="chameleon_system_core.event_listener.clear_frontend_router_cache" class="ChameleonSystem\CoreBundle\EventListener\ClearRoutingCacheListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.add_domain" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.update_domain" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.delete_domain" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.add_shop_order_step" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.update_shop_order_step" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.delete_shop_order_step" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.change_default_language_for_portal" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.change_active_languages_for_portal" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.change_use_slash_in_seo_urls_for_portal" method="clearRoutingCache" />
            <tag name="kernel.event_listener" event="chameleon_system_core.change_routing_config" method="clearRoutingCache" />
            <argument type="service" id="chameleon_system_core.router.chameleon_frontend" />
        </service>

        <service id="chameleon_system_core.translator" class="ChameleonSystem\CoreBundle\Translation\ChameleonTranslator" decorates="translator" decoration-priority="-255">
            <argument type="service" id="chameleon_system_core.translator.inner" />
            <argument type="service" id="chameleon_system_core.request_info_service" />
        </service>

        <service id="chameleon_system_core.service.google_api_key" class="ChameleonSystem\CoreBundle\Service\GoogleApiKeyProvider" public="true">
            <argument></argument>
        </service>

        <service id="chameleon_system_core.wysiwyg.ckeditor_config_provider" class="ChameleonSystem\CoreBundle\Wysiwyg\CkEditorConfigProvider" public="true">
            <argument type="service" id="chameleon_system_core.media_manager.url_generator"/>
        </service>

        <service id="chameleon_system_core.security.password.password_hash_generator" class="ChameleonSystem\CoreBundle\Security\Password\PasswordHashGenerator" public="true">
            <argument type="service" id="chameleon_system_core.security.password.hash_algorithm_bcrypt"/>
        </service>

        <service id="chameleon_system_core.security.password.hash_algorithm_bcrypt" class="ChameleonSystem\CoreBundle\Security\Password\HashAlgorithmBcrypt">
            <argument>12</argument>
        </service>

        <service id="chameleon_system_core.event_listener.migrate_session_listener" class="ChameleonSystem\CoreBundle\EventListener\MigrateSessionListener">
            <argument type="service" id="request_stack"/>
        </service>

        <service id="chameleon_system_core.event_listener.rehash_backend_user_password_listener" class="ChameleonSystem\CoreBundle\EventListener\RehashBackendUserPasswordListener">
            <argument type="service" id="chameleon_system_core.util.input_filter"/>
            <argument type="service" id="chameleon_system_core.security.password.password_hash_generator"/>
            <argument type="service" id="database_connection"/>
            <argument type="service" id="chameleon_system_core.global"/>
            <tag name="kernel.event_listener" event="chameleon_system_core.login_success" method="rehashPassword" />
        </service>

        <service id="chameleon_system_core.mapper_loader" class="ChameleonSystem\CoreBundle\MapperLoader\MapperLoader" public="true">
            <argument type="service" id="service_container" />
        </service>

        <service id="chameleon_system_core.media_manager.url_generator"
                 class="ChameleonSystem\CoreBundle\Service\MediaManagerUrlGenerator" public="true">
            <argument type="service" id="chameleon_system_core.util.url"/>
        </service>

        <service id="chameleon_system_core.event_listener.delete_media_connections_listener" class="ChameleonSystem\CoreBundle\EventListener\DeleteMediaConnectionsListener">
            <tag name="kernel.event_listener" event="chameleon_system_core.before_delete_media" method="onDeleteMedia" />
        </service>

        <service id="chameleon_system_core.field.provider.class_from_table_field" class="ChameleonSystem\CoreBundle\Field\Provider\ClassFromTableFieldProvider" public="true">
            <argument type="service" id="chameleon_system_core.data_access_class_from_table_field_provider" />
        </service>

        <service id="chameleon_system_core.field.provider.class_from_table_field_request_level_cache"
                 class="ChameleonSystem\CoreBundle\Field\Provider\ClassFromTableFieldProviderRequestLevelCacheDecorator"
                 decorates="chameleon_system_core.field.provider.class_from_table_field"
        >
            <argument type="service" id="chameleon_system_core.field.provider.class_from_table_field_request_level_cache.inner" />
        </service>

        <service id="chameleon_system_core.cronjob.cronjob_factory" class="ChameleonSystem\CoreBundle\CronJob\CronJobFactory" public="true">
            <argument /> <!-- Service locator will be set by AddCronJobsPass -->
        </service>

        <service id="chameleon_system_core.cronjob.cronjob_enabling_service" class="ChameleonSystem\CoreBundle\CronJob\CronjobEnablingService" public="true">
            <argument type="service" id="database_connection"/>
            <argument type="service" id="chameleon_system_cms_cache.cache"/>
        </service>

        <service id="chameleon_system_core.cronjob.cronjob_state_service" class="ChameleonSystem\CoreBundle\CronJob\CronjobStateService" public="true">
            <argument type="service" id="database_connection"/>
        </service>

        <service id="security.csrf.token_storage" class="ChameleonSystem\CoreBundle\Security\AuthenticityToken\AuthenticityTokenStorage" public="false">
            <argument type="service" id="request_stack"/>
        </service>

        <service id="chameleon_system_core.security.authenticity_token.authenticity_token_manager" class="ChameleonSystem\CoreBundle\Security\AuthenticityToken\AuthenticityTokenManager" public="true">
            <argument type="service" id="security.csrf.token_manager" />
            <argument type="service" id="chameleon_system_core.request_info_service"/>
            <argument type="service" id="chameleon_system_core.util.input_filter"/>
        </service>

        <service id="chameleon_system_core.security.authenticity_token.csrf_token_manager_factory" class="ChameleonSystem\CoreBundle\Security\AuthenticityToken\CsrfTokenManagerFactory" public="true">
            <argument type="service" id="security.csrf.token_generator"/>
            <argument type="service" id="security.csrf.token_storage"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.request_info_service"/>
        </service>

        <service class="ChameleonSystem\CoreBundle\RequestState\HashCalculationLock" id="chameleon_system_core.request_state.hash_calculation_lock"/>
        <service class="ChameleonSystem\CoreBundle\Util\Hash" id="chameleon_system_core.util.hash_array"/>
        <service class="ChameleonSystem\CoreBundle\RequestState\RequestStateHashProvider" id="chameleon_system_core.request_state_hash_provider" public="true">
            <argument id="chameleon_system_core.util.hash_array" type="service"/>
            <argument id="chameleon_system_core.request_state.hash_calculation_lock" type="service" />
            <argument id="request_stack" type="service"/>
            <argument/><!-- set via compiler pass with services tagged with chameleon_system_core.request_state_elements_provider -->
        </service>
        <service class="ChameleonSystem\CoreBundle\RequestState\CoreStateElementProvider" id="chameleon_system_core.request_state.core_state_element_provider" public="false">
            <tag name="chameleon_system_core.request_state_element_provider" />
            <argument id="chameleon_system_core.portal_domain_service" type="service"/>
            <argument id="chameleon_system_core.language_service" type="service"/>
        </service>
        <service class="ChameleonSystem\CoreBundle\RequestState\RequestStateHashProviderCache"
                 id="chameleon_system_core.request_state_hash_provider_cache"
                 decorates="chameleon_system_core.request_state_hash_provider"
        >
            <argument id="chameleon_system_core.request_state_hash_provider_cache.inner" type="service"/>
            <argument type="service" id="request_stack"/>
        </service>

        <service id="chameleon_system_core.resource_collector" class="TCMSResourceCollection" shared="false">
            <argument type="service" id="chameleon_system_core.filemanager"/>
            <argument type="service" id="chameleon_system_core.portal_domain_service"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="chameleon_system_core.command.update.count" class="ChameleonSystem\CoreBundle\Command\CountUpdateCommand">
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.maintenance_mode_service" class="ChameleonSystem\CoreBundle\Maintenance\MaintenanceMode\MaintenanceModeService">
            <argument type="service" id="database_connection"/>
            <argument type="service" id="chameleon_system_cms_cache.cache"/>
        </service>

        <service id="chameleon_system_core.command.activate_maintenance_mode" class="ChameleonSystem\CoreBundle\Command\ActivateMaintenanceModeCommand">
            <argument type="service" id="chameleon_system_core.maintenance_mode_service"/>
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.command.deactivate_maintenance_mode" class="ChameleonSystem\CoreBundle\Command\DeactivateMaintenanceModeCommand">
            <argument type="service" id="chameleon_system_core.maintenance_mode_service"/>
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.command.activate_cronjobs" class="ChameleonSystem\CoreBundle\Command\EnableCronjobsCommand">
            <argument type="service" id="chameleon_system_core.cronjob.cronjob_enabling_service"/>
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.command.deactivate_cronjobs" class="ChameleonSystem\CoreBundle\Command\DisableCronjobsCommand">
            <argument type="service" id="chameleon_system_core.cronjob.cronjob_enabling_service"/>
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.command.active_cronjob_check" class="ChameleonSystem\CoreBundle\Command\GetCronjobsStateCommand">
            <argument type="service" id="chameleon_system_core.cronjob.cronjob_state_service"/>
            <tag name="console.command"/>
        </service>

        <service id="chameleon_system_core.response.response_variable_replacer" class="ChameleonSystem\CoreBundle\Response\ResponseVariableReplacer" public="true">
            <argument type="service" id="chameleon_system_core.security.authenticity_token.authenticity_token_manager"/>
            <argument type="service" id="chameleon_system_core.flash_messages"/>
        </service>

        <service id="cmsPkgCore.tableEditorListFieldState" class="TTableEditorListFieldState" public="true" />

        <service id="chameleon_system_core.module.sidebar.sidebar_backend_module" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\Sidebar\SidebarBackendModule" shared="false">
            <argument type="service" id="chameleon_system_core.util.url"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="chameleon_system_core.util.input_filter"/>
            <argument type="service" id="chameleon_system_core.response.response_variable_replacer"/>
            <argument type="service" id="chameleon_system_core.bridge.chameleon.module.sidebar.menu_item_factory"/>
            <tag name="chameleon_system.module" />
        </service>

        <service id="chameleon_system_core.bridge.chameleon.module.sidebar.menu_item_factory" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\Sidebar\MenuItemFactory" />

        <service id="chameleon_system_core.bridge.chameleon.module.sidebar.table_menu_item_provider" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\Sidebar\TableMenuItemProvider">
            <tag name="chameleon_system.backend_menu_item_provider" databaseclass="TdbCmsTblConf" />
        </service>
        <service id="chameleon_system_core.bridge.chameleon.module.sidebar.module_menu_item_provider" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\Sidebar\ModuleMenuItemProvider">
            <tag name="chameleon_system.backend_menu_item_provider" databaseclass="TdbCmsModule" />
        </service>
        <service id="chameleon_system_core.bridge.chameleon.module.sidebar.custom_item_provider" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\Sidebar\CustomMenuItemProvider">
            <tag name="chameleon_system.backend_menu_item_provider" databaseclass="TdbCmsMenuCustomItem" />
        </service>

        <service id="chameleon_system_core.module.static_view_module" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Module\StaticView\StaticViewModule" shared="false">
            <argument type="service" id="chameleon_system_core.language_service"/>
            <tag name="chameleon_system.module" />
        </service>

        <service id="chameleon_system_core.service.backend_breadcrumb" class="ChameleonSystem\CoreBundle\Service\BackendBreadcrumbService">
            <argument type="service" id="request_stack"/>
        </service>

        <service id="chameleon_system_core.service.main_menu_migrator" class="ChameleonSystem\CoreBundle\Bridge\Chameleon\Migration\Service\MainMenuMigrator">
            <argument id="database_connection" type="service"/>
            <argument id="chameleon_system_core.tools" type="service"/>
            <argument id="chameleon_system_core.util.field_translation" type="service"/>
        </service>
    </services>
</container>
