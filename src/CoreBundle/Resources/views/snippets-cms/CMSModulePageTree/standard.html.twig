{# @var treeNodes \ChameleonSystem\CoreBundle\DataModel\BackendTreeNodeDataModel #}


{% if isInIframe == false %}

<div class="card">
    <div class="card-header">
        <h3>Navigation</h3>
    </div>
    <div class="card-body simple-tree-card">
{% endif %}

        <div id="navigationTreeContainer{% if showAssignDialog == true %}-checkboxes{% endif %}" class="navigationTreeContainer"></div>

{#        <div class="treelegend" style="display: none;">#}
{#            <h3>#}
{#                <span class="nodeIndicatorIcon"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_header' | trans }}</span>#}
{#            </h3>#}

{#            <div class="text">#}
{#                <span class="nodeIndicatorIcon"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_node_has_no_page' | trans }}</span>#}
{#            </div>#}

{#            <div class="otherConnectedNode">#}
{#                <span class="nodeIndicatorIcon"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_has_connected_pages' | trans }}</span>#}
{#            </div>#}

{#            <div class="activeConnectedNode">#}
{#                <span class="nodeIndicatorIcon"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_connected_to_selected_page' | trans }}</span>#}
{#            </div>#}

{#            <div class="restrictedPage">#}
{#                <span class="nodeIndicatorIcon iconRestricted" style="background-image: url('<?php echo TGlobal::OutHTML(TGlobal::GetStaticURLToWebLib('/images/tree/lock.png')); ?>');"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_connected_to_protected_page' | trans }}</span>#}
{#            </div>#}

{#            <div class="legendLine">#}
{#                <span class="nodeIndicatorIcon iconHidden" style="background-image: url('<?php echo TGlobal::OutHTML(TGlobal::GetStaticURLToWebLib('/images/tree/hidden.png')); ?>');"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_hidden' | trans }}</span>#}
{#            </div>#}

{#            <div class="legendLine">#}
{#                <span class="nodeIndicatorIcon iconExternalLink" style="background-image: url('<?php echo TGlobal::OutHTML(TGlobal::GetStaticURLToWebLib('/images/icon_external_link.gif')); ?>');"></span>#}
{#                <span>{{ 'chameleon_system_core.cms_module_page_tree.legend_external_link' | trans }}</span>#}
{#            </div>#}
{#        </div>#}

{% if isInIframe == false %}
    </div>
</div>
{% endif %}

<script>
    var currentNodeID = null;

    $("#navigationTreeContainer")
        .jstree({
            "core":{
                "multiple": true,
                "data": {
                    "url": "{{ treeNodesAjaxUrl | raw }}",
                    "data": function(node) {
                        return {
                            'id' : node.id
                        };
                    }
                },
                "check_callback" : true
            },
            "types": {
                "default": {
                    "icon": "fas fa-folder-open"
                },
                "folder": {
                    "icon": "fas fa-folder-open"
                },
                "folderRestrictedMenu": {
                    "icon": "fas fa-folder-open"
                },
                "folderRootRestrictedMenu": {
                    "icon": "fas fa-folder-open"
                },
                "page": {
                    "icon": "far fa-file"
                },
                "locked": {
                    "icon": "fas fa-lock"
                },
                "externalLink": {
                    "icon": "fas fa-external-link-alt"
                }
            },
            "plugins":[ "types", "wholerow", "changed", "contextmenu"],
            "contextmenu": {
                "items": navigationRightClickMenu
            }
        });

    $("#navigationTreeContainer-checkboxes")
        .jstree({
            "core":{
                "multiple": true,
                "data": {
                    "url": "{{ treeNodesAjaxUrl | raw }}",
                    "data": function(node) {
                        return {
                            'id' : node.id
                        };
                    }
                },
                "check_callback" : true
            },
            "types": {
                "default": {
                    "icon": "fas fa-folder-open"
                },
                "folder": {
                    "icon": "fas fa-folder-open",
                    "check_node": false
                },
                "folderRestrictedMenu": {
                    "icon": "fas fa-folder-open",
                    "check_node": false
                },
                "folderRootRestrictedMenu": {
                    "icon": "fas fa-folder-open",
                    "check_node": false
                },
                "page": {
                    "icon": "far fa-file"
                },
                "locked": {
                    "icon": "fas fa-lock"
                },
                "externalLink": {
                    "icon": "fas fa-external-link-alt"
                }
            },
            "checkbox": {
                "three_state": false,
                "cascade": "none"
            },
            "plugins":[ "types", "wholerow", "changed", "checkbox", "contextmenu"],
            "contextmenu": {
                "items": navigationRightClickMenuWithAssignDialog,
                "select_node": false
            }
        });


    function navigationRightClickMenu(node) {
        var items = {
            "editpageconnections": {
                "label": "{{ 'chameleon_system_core.cms_module_page_tree.connected_pages'|trans }}",
                "icon": "fas fa-link",
                // "_class": "foo-bar",
                "action": function (obj) {
                    this.openPageConnectionList(obj.reference);
                }
            },
            "editpage": {
                "label": "{{ 'chameleon_system_core.cms_module_page_tree.action_edit_page'|trans }}",
                "icon": "far fa-edit",
                "action": function (obj) {
                    this.openPageEditor(obj.reference);
                }
            },
            "editpageconfig": {
                "label": "{{ 'chameleon_system_core.list.page_settings'|trans }}",
                "icon": "fas fa-cog",
                "action": function (obj) {
                    this.openPageConfigEditor(obj.reference);
                }
            },
            "editnode": {
                "label": "{{ 'chameleon_system_core.cms_module_page_tree.action_edit_node'|trans }}",
                "icon": "fas fa-sitemap",
                "action": function (obj) {
                    this.openTreeNodeEditor(obj.reference);
                }
            },
            "newnode": {
                "label": "{{ 'chameleon_system_core.action.new'|trans }}",
                "icon": "fas fa-plus",
                "action": function (obj) {
                    this.openTreeNodeEditorAddNewNode(obj.reference);
                }
            },
            "deletenode": {
                "label": "{{ 'chameleon_system_core.action.delete'|trans }}",
                "icon": "far fa-trash-alt",
                "action": function (obj) {
                    this.deleteNode(obj.reference);
                }
            }
        };

        if (node.type === "folderRestrictedMenu" || node.type === "folderRootRestrictedMenu")  {
            delete items.editpageconnections;
            delete items.editpage;
            delete items.editpageconfig;
            delete items.deletenode;
        }

        if (node.type === "folderRootRestrictedMenu") {
            delete items.editnode;
        }

        return items;
    }

    function navigationRightClickMenuWithAssignDialog(node) {
        var assignPage = {
            "assignPage": {
                "label": "{{ 'chameleon_system_core.cms_module_page_tree.action_connect_page'|trans }}",
                "icon": "fas fa-link",
                "separator_after": true,
                "action": function (obj) {
                    // this.assignPage(obj.reference);
                }
            }
        };

        return Object.assign(assignPage, navigationRightClickMenu(node));
    }


    function openPageConnectionList(node) {
        var nodeID = $(node).parent().attr('id');
        var url = "{{ openPageConnectionListUrl | raw }}" + "&sRestriction=" + nodeID;
        CreateModalIFrameDialogCloseButton(url);
    }

    /**
     * opens the page in edit mode
     */
    function openPageEditor(node) {
        var pageID = $(node).parent().attr('ispageid');

        if (pageID != false && typeof(pageID) != "undefined") {
            var url = "{{ openPageEditorUrl | raw }}" + '&id=' + pageID;
            parent.document.location.href = url;
        } else {
            alert("{{ 'chameleon_system_core.cms_module_page_tree.node_has_no_page'|trans }}");
        }
    }

    /**
     * opens the page in config edit mode
     */
    function openPageConfigEditor(node) {
        var pageID = $(node).parent().attr('ispageid');
        if (pageID != false && typeof(pageID) != "undefined") {
            var url = "{{ openPageConfigEditorUrl | raw }}" + '&id=' + pageID;
            parent.document.location.href = url;
        } else {
            alert("{{ 'chameleon_system_core.cms_module_page_tree.node_has_no_page'|trans }}");
        }
    }

    /**
     * opens the tree node editor
     */
    function openTreeNodeEditor(node) {
        var nodeID = $(node).parent().attr('id');
        currentNodeID = nodeID; // save node ID in global var
        var url = "{{ openTreeNodeEditorUrl | raw }}" + '&id=' + nodeID;
        CreateModalIFrameDialogCloseButton(url);
    }

    /**
     * opens the tree node editor and adds a new node
     *
     */
    function openTreeNodeEditorAddNewNode(node) {
        var nodeID = $(node).parent().attr('id');
        currentNodeID = nodeID; // save node ID in global var
        var url = "{{ openTreeNodeEditorAddNewNodeUrl | raw }}" + '&parent_id=' + nodeID;
        CreateModalIFrameDialogCloseButton(url);
    }

    /**
     * deletes a node and kills the page connections
     */
    function deleteNode(node) {
        var confirmMessage = "{{ 'chameleon_system_core.cms_module_page_tree.confirm_delete'|trans }}";
        confirmMessage = confirmMessage.replace(/&quot;/g, '\"');

        var nodeTitle = $(node).text();
        confirmMessage = confirmMessage.replace('%nodeName%', nodeTitle);

        if(confirm(confirmMessage)){
            var nodeID = $(node).parent().attr('id');
            var url = "{{ deleteNodeUrl | raw }}" + '&nodeID=' + nodeID;
            CHAMELEON.CORE.showProcessingModal();
            GetAjaxCallTransparent(url, deleteNodeSuccess);
        }
    }

    /**
     * final remove of the node from DOM tree
     */
    function deleteNodeSuccess(nodeID, responseMessage) {
        if ('success' === responseMessage) {
            var deletedNode = $(".navigationTreeContainer.jstree #" + nodeID);
            $(".navigationTreeContainer.jstree").jstree(true).delete_node(deletedNode);


            //ToDo: parent: change folder-icon to page-icon if there're no children anymore


        }
        /**
         * see "deleteNode" method for explanation why "window.parent" is used here
         */
        window.parent.CHAMELEON.CORE.hideProcessingModal();
    }


</script>
