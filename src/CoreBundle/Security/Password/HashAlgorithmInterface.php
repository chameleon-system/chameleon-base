<?php

/*
 * This file is part of the Chameleon System (https://www.chameleonsystem.com).
 *
 * (c) ESONO AG (https://www.esono.de)
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace ChameleonSystem\CoreBundle\Security\Password;

/**
 * HashAlgorithmInterface defines an interface for a hash algorithm that is e.g. used to hash user passwords.
 * @deprecated 7.2 - symfony security layer used
 */
interface HashAlgorithmInterface
{
    /**
     * Return a hashed password.
     *
     * @param string $plainPassword
     *
     * @return string
     */
    public function hash($plainPassword);

    /**
     * Returns true if $hash can be verified as valid hash for $plainPassword.
     *
     * @param string $plainPassword
     * @param string $hash
     *
     * @return bool
     */
    public function verify($plainPassword, $hash);

    /**
     * Returns true if $hash is a hash generated by this algorithm. Note that not all algorithms may be able to identify
     * their generated hashes.
     *
     * @param string $hash
     *
     * @return bool
     */
    public function isHashedByThisAlgorithm($hash);

    /**
     * Returns true if $hash was created with the same settings the implementation currently has. This can be used to
     * check if re-hashing is required because of altered hash security levels like a cost factor.
     * Note that not all algorithms may be able to identify their generated hashes or the settings used.
     *
     * @param string $hash
     *
     * @return bool
     */
    public function isHashedWithCurrentSettings($hash);
}
